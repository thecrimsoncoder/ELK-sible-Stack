hosts: ELK
connection: local
vars:
    KIBANA_USER: changeme
    KIBANA_PASSWORD: changeme
    USER: changeme
    SERVER_NAME: changeme
    
become: yes
  tasks:
    ## INSTALL ##
    - name: (Java8) Install and add Repository
      local-action:
      module: apt
        name: oracle-java8-installer
        update-cache: yes
        state: present
    - name: (ElasticSearch) Install and add Repository
      local-action:
      module: shell
        executable: wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
        executable: echo "deb http://packages.elastic.co/elasticsearch/2.x/debian stable main" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
      module: apt
        name: elasticsearch
        update-cache: yes
        state: present
    - name: (Logstash) Install and add Repository
      local-action:
      module: shell
        executable: echo "deb http://packages.elastic.co/logstash/2.3/debian stable main" | sudo tee -a /etc/apt/sources.list
      module: apt
        name: logstash
        update-cache: yes
        state: present
    - name: (Kibana) Install and add Repository
      local-action:
      module: shell
        executable: echo "deb http://packages.elastic.co/kibana/4.5/debian stable main" | sudo tee -a /etc/apt/sources.list
      module: apt
        name: kibana
        update-cache: yes
        state: present
    - name: (NGINX) Install and add Repository
      local-action:
      module: apt
        name: nginx
        update-cache: yes
        state: present
    - name: (NGINX-Apache2-Utils) Install and add Repository
      local-action:
      module: apt
        name: apache2-utils
        update-cache: yes
        state: present
    ## CONFIGURATION ##
    - name: (Logstash) adding module config files
      local-action:
      module: copy
        src: /home/"{{ "USER }}"/30-elasticsearch-output.conf
        dest: /etc/logstash/conf.d/
        src: /home/"{{ USER }}"/02-beats-input.conf
        dest: /etc/logstash/conf.d/
    - name: (ElasticSearch) Modify elasticsearch.yml config
      local-action:
      module: lineinfile
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '# network.host: localhost'
        line: 'network.host: localhost'
    - name: (Kibana) Modify kibana.yml config
      local-action:
      module: lineinfile
        path: /opt/kibana/config/kibana.yml
        regexp: 'server.host: 0.0.0.0'
        line: 'server.host: localhost'
    - name: (NGINX) add config file (default)
      local-action:
      module: copy
        src: /home/"{{ USER }}"/default
        dest: /etc/nginx/sites-available/
    - name: (NGINX) modify sites-available config
      local-action:
      module: lineinfile
        path: /etc/nginx/sites-available/default
        regexp: 'server_name: changeme'
        line: 'server_name: "{{ SERVER_NAME }}"'
    - name: (NGINX) Add kibana user
      local-action:
      module: shell
        executable: sudo htpasswd -c /etc/nginx/htpasswd.users “{{ KIBANA_USER }}” “{{ KIBANA_PASSWORD }}”
    - name: (SSL) create SSL cert folders
      local-action:
      module: file
        path: /etc/pki/tls/certs
        path: /etc/pki/tls/private
     
    ## RESTART AND ENABLE SERVICES ##
     - name: (ElasticSearch) Restart and Enable (Load on boot) Service
        local-action:
        module: systemd
          name: elasticsearch
          state: restarted
          enabled: yes
     - name: (Logstash) Restart and Enable (Load on boot) Service
        local-action:
        module: systemd
          name: logstash
          state: restarted
          enabled: yes
     - name: (Kibana) Restart and Enable (Load on boot) Service
        local-action:
        module: systemd
          name: kibana
          state: restarted
          enabled: yes
     - name: (NGINX) Restart and Enable (Load on boot) Service
        local-action:
        module: systemd
          name: nginx
          state: restarted
          enabled: yes

    ## CLEANUP ##
    - name: (CleanUp-1) Clean up repositories that are no longer in use
      local-action:
      module: apt
        autoclean: yes
    - name: (CleanUp-2) Remove up repository files that are no longer in use
      local-action:
      module: apt
        autoremove: yes